###########################################################
# 24/01/2016
# TODO:
# 	NEG(list)
#	SUB
#	list --> single_list
#	distributive
#	elem as list/list as elem
#	detect and format
#	MIRAR PHOTOMATH ANDROID #######
#
###########################################################

#################### DEFINITION ####################

#Recognized elements and variables for operations
element= list, exp

#CAS operations in precedency order
operation= NEG, MUL, SUM, SUB

#Auxiliary functions and constants used in the operations definition. PROVIDED AND IMPLEMENTED BY THE CAS
uses_func= permute, sublist, concat, detect, isFormat

uses_constants= ZERO, ONE, MINUS_ONE

#################### OPERATION ####################
####################### SUM #######################

#SUM operation definition : SUM( paramList )
name = SUM
nParam = 1
paramType = list

# a+b+c = b+a+c
conmutative
# (a+b)+c = a+(b+c)
asociative
# a+0 = a || a+b+c+0 = a+b+c TODO
identity

####################### MUL #######################
#MUL operation definition 
name = MUL
nParam = 1
paramType = list

# a*b*c = b*a*c
conmutative
# (a*b)*c = a*(b*c)
asociative
# a*1 = a || a*b*c*1 = a*b*c TODO
identity
# a*0 = 0 || a*b*c*0 = 0 TODO
zero

####################### NEG #######################
#NEG operation definition 
name = NEG
nParams = 1
paramType = exp


############# COMBINED OPERATIONS #################
combines = SUM, NEG
# a-a = a+(-a) = 0 TODO
prop.inverse_sum = SUM ( detect(exp, NEG(exp)) ) --- ZERO

combines = SUM, MUL
# a*(b+c) = a*b + a*c
distributive
# a*b+a*c = a*(b+c)
common_factor

combines = NEG, MUL
# -a = -1 * a
prop.negation_neg = NEG(exp) --- MUL(concat(MINUS_ONE, exp))